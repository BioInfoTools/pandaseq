.\" Authors: Andre Masella
.TH pandaseq 1 "June 2011" "2.0" "USER COMMANDS"
.SH NAME 
pandaseq \- PAired-eND Assembler for DNA sequences
.SH SYNOPSIS
.B pandaseq
.B \-f
.I forward.fastq
.B \-r 
.I reverse.fastq
[
.B \-6 
] [
.B \-B 
] [
.B \-C
.I module
] [
.B \-d
.I flags
] [
.B \-F 
] [
.B \-j 
] [ 
.B \-l
.I minlen
] [
.B \-L
.I maxlen
] [
.B \-N 
] [
.B \-o 
.I minoverlap
] [
.B \-p
.I forwardprimer
] [
.B \-q
.I reverseprimer 
] [
.B \-t
.I threshold
] [
.B \-T
.I threads
]
.SH DESCRIPTION
PANDASEQ assembles paired-end Illumina reads into sequences, trying to correct for errors and uncalled bases. The assembler reads two files in FASTQ format with quality information. If amplification primers were used (e.g., to isolate a variable region of the 16S gene, or the constant regions around zinc finger binding residues), they can be removed from the sequence. The final sequence will correct any uncalled bases in the overlapping region using the complementary strand. When mismatches occur in the overlapping region, the base with the better quality score is chosen.

The algorithm is as follows:
.IP 1.
Find the positions of the forward and reverse primers over threshold.
.IP 2.
Pick and overlap to maximise the probability of the forward and reverse reads having come from a single piece of DNA.
.IP 3.
Identify the masking of the end of the read with the quality score \fBB\fR.
.IP 4.
Construct an assembled sequence between the primers and calculate the quality.
.IP 5.
Check for various constraints, including quality, length, uncalled bases, and user-supplied modules.
.SH OPTIONS
.TP
\-6
Input files will have their quality encoded as PHRED + 64 instead of the PHRED + 33. PHRED + 64 was used originally in the CASAVA pipeline from version 1.3 through 1.7. In CASAVA 1.8, the score is encoded as PHRED + 33, the default.
.TP
\-B
Allow input sequences to lack a barcode/tag. Normally, Illumina sequences have barcodes attached to the sequence. This allows the barcode to be missing.
.TP
\-C module
Loads an optional validation module to verify sequences are valid before emitting them. See below for more information.
.TP
\-d flags
Set debugging/output flags. To enable a flag, capitalise it; to disable, include a uncapitalise it. Provide information about the \fBb\fRuilding of a sequence. Show excruciating detail about \fBr\fReconstruction. Show some optional \fBs\fRtatistics. Show information about building the \fBk\fR-mer table. Provide error about the \fBf\fRile parsing. Show every \fBm\fRismatch. The default is \fBBFSrk\fR.
.TP
\-f forward.fastq
The location of the forward reads in FASTQ format. The file may be plain FASTQ, or compressed with
.BR gzip (1)
or
.BR bzip2 (1).
Files compressed with gzip are automatically detected. Files compressed with
.BR bzip2 (1)
will only be decompressed with the
.B -j
option.
.TP
\-F
Normally, output will be as a FASTA even though per-base quality information is available. To retain this quality information, this flag will output the sequence and the quality information in FASTQ format with quality scores encoded as PHRED + 33. The meaning of the quality score is conceptually different from the input quality scores for the overlap region, but this may not matter depending on your downstream application.
.TP
\-j
Input files specified be
.B -f
and 
.B -r
are compressed by
.BR bzip2 (1).
.TP
\-l minlen
Sets the minimum length for a sequence. By default, all sequences are kept. With this option, sequences shorter than theoretically possible can be discarded.
.TP
\-L maxlen 
Sets maximum length for a sequence. Any sequences longer, after primers are removed, will be discarded.
.TP
\-N
Eliminate all sequences with uncalled nucleotides in the output. Otherwise, during assembly, uncalled bases\ (Ns) from unpaired regions may be emitted.
.TP
\-o minoverlap
Sets the minimum overlap between forward and reverse reads. By default, this is at least one nucleotide of overlap, but this alignment tends to score poorly.
.TP
\-p forwardprimer
Strip out primers from the start of the sequence. If the data contains a forward primer (e.g., a conserved region to amplify a 16S variable region), specifying it here will cause the primer to be located in the read and the primer, and any sequence before it, will be discarded. It is also possible to specify a number and the same number of leading bases will be stripped from the sequence. This is useful if the sequence has many uncalled bases in the primer region.
.TP
\-q reverseprimer
Strip out primers from the end of the sequence. The primer is specified as it appears in the reverse read.
.TP
\-r reverse.fastq
FASTQ file containing the reverse reads. See
.B -f
for more information.
.TP
\-t threshold
The score, between zero and one, that a sequence must meet to be kept in the output. This score is the geometric mean of the bases emitted.
.TP
\-T threads
The number of threads to spawn. This will only be avilable if PANDAseq was compiled with 
.BR pthreads (7).
In most cases, PANDAseq is IO-bound, not CPU-bound; therefore, adding more CPU capacity would have no effect. Try monitoring a running copy of PANDAseq with 
.BR top (1);
watch the CPU% for the PANDAseq process and the overall system CPU waiting time (\fI%wa\fR in the banner at the top). If waiting time is low and CPU% is very high, then multi-threading may increase speed. If the CPU waiting time is high, threading will simply not help.
.SH OUTPUT STATISTICS
At the end of reconstruction, several statistics are output on lines beginning with \fBSTAT\fR.
.TP
READS
The number of reads in the input files.
.TP
NOALGN
The number of sequences where there exists no overlap with a probability above the threshold.
.TP
NOFP
The number of sequences where the forward primer could not be aligned. This is only done when \fB-p\fR is supplied and a nucleotide sequence.
.TP
NORP
The number of sequences where the reverse primer could not be aligned. This is only done when \fB-q\fR is supplied and a nucleotide sequence.
.TP
LOWQ
The number of sequences where the quality score of the reconstruction is below the threshold. This says nothing about the quality scores of the individual bases in the forward and reverse reads.
.TP
DEGENERATE
The number of sequences containing uncalled/degenerate/N bases in the final reconstruction (it is immaterial if there are uncalled bases in the reads.) This is only done when \fB-N\fR is provided.
.TP
SHORT
The number of sequences where the final reconstructed sequence is too short. This is only done when \fB-l\fR is provided.
.TP
LONG
The number of sequences where the final reconstructed sequence is too long. This is only done when \fB-L\fR is provided.
.TP
OK
The number of sequences output.
.SH LOGGING MESSAGES
During output, the assembler may output any of the following errors.
.TP
ERR BADID
The name of the input read did not follow the know Illumina standard formats. Older versions of CASAVA produce sequences with IDs that look like \fBHWUSI-EAS1661_9323_FC619KG:7:1:1190:15190#ATCACG/1\fR, where the fields are \fIinstrument:lane:tile:x:y#tag/direction\fR. Newer version of CASAVA produce IDs that look like \fB@HWI-ST822:85:C05C3ACXX:1:1101:1171:2104 3:N:0:TAGACA\fR, where the fields are \fIinstrument:run:flowcell:lane:tile:x:y direction:filtered:flags:tag\fR. If your sequence headers do not look like either of these, either Illumina has created yet-another header format or, more likely, your sequence headers have been manipulated by some upstream processing. PANDAseq needs the original Illumina probabilities; not ones manipulated by other programs. We're very picky about that. Sometimes, for mysterious reasons, the sequences lack the barcoding tag. The \fB-B\fR option will cause the lack of barcode to be ignored. This will obviously invalidate the use of modules that depend on the barcode.
.TP
ERR BADNT
An invalid letter was found in a nucleotide read. Likely caused by incorrect or corrupt input files.
.TP
ERR BADSEQ
The an unexpected character or end of the input file was detected. Likely caused by incorrect or corrupt input files.
.TP
ERR EOF
The end of the input file was detected before it was expected. Likely caused by incorrect or corrupt input files.
.TP
ERR KLNG
The \fIk\fR-mer table is too small to hold a read of the size requested. This is a bug or platform-dependent behaviour. Please file a ticket either way.
.TP
ERR LOWQ
The sequence is discarded because the quality is too low given the supplied threshold.
.TP
ERR NEGS
The reconstruction parameters do not produce a valid sequence. Instead, they produce a negative-length sequence.
.TP
ERR NODATA
A FASTQ record has no sequence data.
.TP
ERR NOFILE
The input file was not found.
.TP
ERR NOFP
The forward primer could not be matched to the forward read. Either the primer is incorrect or the read is low quality or not the correct original molecule.
.TP
ERR NOQUAL
Quality information is missing from the FASTQ file. This data is required to reconstruct the sequence.
.TP
ERR NORP
The reverse primer could not be matched to the reverse read. Either the primer is incorrect or the read is low quality or not the correct original molecule.
.TP
ERR NOTPAIRED
Sequences from FASTQ files are not pairing correctly given their sequence names. Likely, the files are mismatched.
.TP
ERR OOM
An out of memory condition has occurred. Given the memory available, assembly of this sequence is not possible. As Illumina sequencing gets longer, the amount of memory needed can be adjusted. Please file a bug.
.TP
INFO BESTOLP
The best overlap parameter for a sequence.
.TP
INFO BUILD
The parameters of a reconstructed base.
.TP
INFO MISM
A mismatch has been identified in the reconstruction.
.TP
INFO MOD
Information about a module.
.TP
INFO OLD
An overlap possibility, with probability, as been identified.
.TP
INFO RECR
The proposed reconstruction parameters.
.TP
STAT
Some statistical information about the assembly process.
.TP
DBG FMER
A \fIk\fR-mer has been identified in the forward read.
.TP
DBG FML
A duplicate \fIk\fR-mer has been identified in the forward read and discarded. This might cause failure to assemble a sequence if repeated too often.
.TP
DBG RMER
A \fIk\fR-mer has been identified in the reverse read.
.TP
ERR UNKNOWN ERROR
Something truly unexpected has happened. This probably involves an external module.
.SH EXAMPLES
This will assemble a data from a run in lane 7:

.B pandaseq -j -f s_7_1.fastq.bz2 -r s_7_2.fastq.bz2 > s_7.fasta

This will assemble data from lane 7, stripping conserved regions around the prokaryotic 16S V3 region and store the results in
.B s_7.fastq.bz2
and store the logging output
.B s_7.log.bz2.

.B (pandaseq -j -f s_7_1.fastq.bz2 -r s_7_2.fastq.bz2 -p CCTACGGGAGGCAGCAG -q ATTACCGCGGCTGCTGG | bzip2 > s_7.fasta.bz2) 2>&1 | bzip2 -c > s_7.log.bz2
.SH VALIDATON MODULES
Validation modules are capable of verifying sequences. For example, one could write a module to check secondary structure of a RNA, or that a coding sequence contains no stop codons. To create a module, please read the source distribution. Invoking a module can be done using the
.B -C
switch on the command line. As many modules as desired may be added. The path to the module may be followed by a colon (on Windows, a semicolon) and arguments. For example, the following will pass the data through a hypothetical compensatory checker:

.B pandaseq -j -f s_7_1.fastq.bz2 -r s_7_2.fastq.bz2 -C compensatory.so:1=12,13=15 > s_7.fasta

Modules can be compiled using
.BR pandaxs (1).
.SH INCLUDED MODULES
There are some included modules:
.TP
validtag:\fItag1\fR:\fItag2\fR:...
This can be used to demultiplex sequences. It will only include sequences in the output with the tags specified.
.TP
completely_miss_the_point
This can be used to only include sequences with perfect overlap regions. You shouldn't want to do it. The whole point is to fix sequences which are probably good. Moreover, assuming that the sequencer is right in the overlap region and in the non-overlapping regions requires an unsound leap in statistics.
.SH SEE ALSO
.BR pandaxs (1),
.BR gzip (1),
.BR bzip2 (1).
